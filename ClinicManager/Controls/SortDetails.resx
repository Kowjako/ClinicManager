<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ascSort.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAnRJREFUaEPt
        mrFLG3EUxwPFoV3c3G2XDjq5uLjJXaIoKii4deriH+BQCoXS3l0igt10Kk4aVBCcnETI7y72Ki2tSJBS
        6BC6NBSqgwQa37NPern8zvv9kp+Xi7kPfCHcvfd+7xv4PX65XOpeMGY5G5NLR6d+TeSKJ2mDTVNYZGSy
        hSe6aW+DtrRcsZ8uB4PNvtw5q62zn3Wae/fxUjOc5xQWGZpp70DzNdIWXQ4GDWDD33//rdOz1U8X7TAA
        TbseAy5dDiYxoJjuM4DTBjcsNuzVeM6pdoQBHJXYKFdv2VMKiwxpA3FD2gB+y/BtD4lq4pX7iFLvBGkD
        49niF09CqNAEpd4JsIacgaApxFNiQIDEwG2KrYGV/R+1g7M/oYqlgUzW+exJCFXsDMSN7jOgWfYLCFxr
        RVRKCVBPfhMvvP9ae737TVqLm6XrhaiUEpoyIDpG/bqZTFRKCYkBGSUGODRloKM3cceP0bjRfQZkD3Mi
        wppUXhrIl9/EosdpEWEtrEnlpWnKQLNjlCeslRhIDLSgyA3IPtgSEdak8tJAvpwB2UeLQmrhobC0gXaR
        Nti8bjn5Bpl2xWOgwovBXCoT8nhdofRscYSWvGZo1e3RTbbnaVZU27P5/AMqE/wHh0pNLR9VYeGGQ9/s
        MnuoG+zQ12CwIBZzKP0fqqcQT3j0hga4p9ZR0+2Fe8d1jfJ1jLGU9p92G0C0XKEP7pc8zfpVwhgKrycO
        BpBR48Nj2BNlX+MgVsZ7FNZIXAwgYyYbhDjvFPqlvSkM0G0+aID3qoFK4U9WEQNIxnKGIfYchZ/pcjBB
        L3uoFv50pSVDSVv2TDteNImYVOoKndWNz8E+kp4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="descSort.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAl9JREFUaEPt
        mr9rFFEQxw/EQhs7e7VJoVUaG7uwe5cQUSGCnZWNf4CFCILo7t6FgHZJJVZ6JAHByioI93YvrkFJRI4g
        gkWwMQiJhQQ855sMuGZ/ZOdu392L2Q984dibmTffgzfsvtvKf8G4Fzy/PL38Sbcsz7/LS2ZSq7fO2a6/
        QJq3Gu0zfDkdFL+3uN59pr5p0+2na11qaI6XzMRy/UWKRTw0z5fTgQEs8uXHb2168PJzbgMUF0YMhHw5
        ndJADpUGsphstD9ef/Lu183Z9z916crM8o42A1VHXbWc4JZu2fX2JV4yE7EB0xAbsB6pEfqFRgsV1eTy
        YsQGJurt1UhCIUJNLi+G8mUGip5CqIWaXF5MaaBflQZ6MfD49dfu0vpWIUKtgRqo1YMPkYRChJpcXgzl
        ywyYxtEzgEc9CpzrR1yqEKiefBPjkQ+3vFLdedHZXYhLFUJPBnodo5g6pYF9lAYkMsbAod7Eh36MmsbR
        MyC9mcMzL6dqgdaQb+K8t9PGGsg7RksDOSgNZMlIA9KDLeMMSI8WJ++HJzlVC2IDw6LqqBu2FzRjcv3N
        iIHNpBjkcpkDjtf7OKQ9iNHZ8LjtqleRZvNqYarZPMZl0v/gmGgEOzDBYVqYmlEnbEe9SWgyWRSLHE7f
        I20KwYRuA2DMDU9RcyuxZuNaQSyn/WXYBoDVaJ2mBjv7Go6qgxgO/xcTDIAx5+1Z2hMb8ebVBr7jsDim
        GADjrrpATUen0HfrYes8f50MDCS9aoCNPWgDoOYFF6nxbQif+XI6aS97YDphxHLYQKl6/rVhrT1AKpU/
        5JmNzz0CCQsAAAAASUVORK5CYII=
</value>
  </data>
</root>